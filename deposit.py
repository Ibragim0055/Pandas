import asyncio
from aiogram import Bot, F, Dispatcher
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import default_state, State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import Message, CallbackQuery, ReplyKeyboardMarkup, ReplyKeyboardRemove, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup
import asyncpg
import pytz
from datetime import datetime


async def cr():
    conn = await asyncpg.connect(user='postgres', password='8967824ib', host='localhost', database='deposit') 
    return conn 

async def cr_deposit():
    conn = await cr()
    await conn.execute('''create table menu (
    id BIGSERIAL PRIMARY KEY,
    user_id bigint unique,
	username text,
	data_start text,
	income_sum bigint,
	second_sum bigint,
	balance float,
	deposits float,
	income_trade float,
	trade_plan bigint,
	trade_ref_program float,
	conclusion float,
	referrals bigint,
	count_deposits bigint,
	sum_deposits float,
    your_income float,
	referrer bigint
)
''') 
    await conn.close() 

async def cr_menu_c():
    conn = await cr()
    await conn.execute('''create table menu_c (
    id BIGSERIAL PRIMARY KEY,
    user_id bigint unique,
	second_c bigint,
	application boolean
)
''') 
    await conn.close() 

async def cr_bot():
    conn = await cr()
    await conn.execute('''create table bot (
    id BIGSERIAL PRIMARY KEY,
    users_h bigint unique,
	second_h bigint,
	bot_h bigint
)
''') 
    await conn.close() 

bot = Bot(token='7409696935:AAF-9MKFI0hRjxwVdZASQdaPOAP8iLq6VcA')

dp = Dispatcher(storage=MemoryStorage())

async def data_start():
    moscow = pytz.timezone('Europe/Moscow')
    time = datetime.now(moscow)
    t = time.strftime('%Y-%m-%d')
    return t

async def user_f(message: Message):
    conn = await cr()
    user = await conn.fetchrow('''SELECT * FROM menu WHERE user_id=$1''', message.from_user.id)
    return user

async def NACH():
    while True:
        await asyncio.sleep(1)
        conn = await cr()
        result = await conn.fetch("SELECT * FROM menu")
        for i in result:
            if i[5] <= 86400:
                await conn.execute(f'''UPDATE menu SET second_sum = second_sum + 1 WHERE user_id=$1''', i[1])
            else:
                await conn.execute(f'''UPDATE menu SET second_sum = 0 WHERE user_id=$1''', i[1])
                await conn.execute(f'''UPDATE menu SET balance = balance + {i[8]} WHERE user_id=$1''', i[1])
                if i[-1]:
                    a = i[8]*20/100
                    await conn.execute(f'''UPDATE menu SET balance = balance + {a} WHERE user_id=$1''', i[-1])
                    await conn.execute(f'''UPDATE menu SET your_income = your_income + {a} WHERE user_id=$1''', i[-1])
        result_c = await conn.fetch("SELECT * FROM menu_c")
        for j in result_c:
            await conn.execute(f'''UPDATE menu_c SET second_c = second_c + 1 WHERE user_id=$1''', j[1])
            if j[2] >= 86400:
                if j[3]:
                    await conn.execute(f'''UPDATE menu_c SET application = False WHERE user_id=$1''', j[1])
        result_h = await conn.fetchrow("SELECT * FROM bot")
        if result_h[2] >= 86400:
            await conn.execute(f'''UPDATE bot SET second_h = 0''')
            await conn.execute(f'''UPDATE bot SET users_h = 0''')
        else:
            await conn.execute(f'''UPDATE bot SET second_h = second_h + 1''')


@dp.message(Command('start'))
async def start(message: Message):
    global referrer_id_user_id
    referrer_id = message.text.split()[1] if len(message.text.split()) > 1 else None
    referrer_id_user_id = {message.from_user.id: referrer_id}
    await start1(message)

async def start1(call: CallbackQuery):
    user_chat_member = await bot.get_chat_member(-1001613934290, call.from_user.id)
    if user_chat_member.status != 'member':
        a_button = InlineKeyboardButton(text=f'–ü—Ä–æ–≤–µ—Ä–∏—Ç—å', callback_data='member_verify')
        button = InlineKeyboardMarkup(inline_keyboard=[[a_button]])
        await bot.send_message(call.from_user.id, text="üëâ –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º Smart üîë System –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ\n<a href='https://t.me/SmartSystem_channel'>üîî –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª üîî</a>", reply_markup=button, parse_mode='HTML')
    else:
        await start2(call)

@dp.callback_query(F.data == 'member_verify')
async def member_verify(call: CallbackQuery):
    await start1(call)

async def start2(message: Message):
    try:
        referrer_id = referrer_id_user_id[message.from_user.id]
    except:
        pass
    try:
        print(referrer_id)
    except:
        referrer_id = None
    conn = await cr()
    user = await user_f(message)
    if user:
        await menu(message)
    else:
        await message.answer('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç!')
        if referrer_id and int(referrer_id) != int(message.from_user.id):
            a_button = InlineKeyboardButton(text='üè† –ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ', callback_data='–ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ')
            button   = InlineKeyboardMarkup(inline_keyboard=[[a_button]])
            await bot.send_message(int(referrer_id), text=f"–í—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –Ω–æ–≤–æ–≥–æ<a href='tg://user?id={message.from_user.id}'> —Ä–µ—Ñ–µ—Ä–∞–ª–∞! </a>", parse_mode='HTML', reply_markup=button)
            await conn.execute('''UPDATE menu SET referrals = referrals + 1 WHERE user_id=$1''', int(referrer_id)) 
            await conn.execute('''INSERT INTO menu (user_id, username, data_start, income_sum, second_sum, balance, deposits, income_trade, trade_plan, trade_ref_program, conclusion, referrals, count_deposits, sum_deposits, your_income, referrer) VALUES 
                               ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16)''', 
                               message.from_user.id, message.from_user.username, await data_start(), 0, 0, 0.0, 0.0, 0.0, None, 0.0, 0.0, 0, 0, 0.0, 0.0, int(referrer_id)) 
        else:
            await conn.execute('''INSERT INTO menu (user_id, username, data_start, income_sum, second_sum, balance, deposits, income_trade, trade_plan, trade_ref_program, conclusion, referrals, count_deposits, sum_deposits, your_income, referrer) VALUES 
                               ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16)''', 
                               message.from_user.id, message.from_user.username, await data_start(), 0, 0, 0.0, 0.0, 0.0, None, 0.0, 0.0, 0, 0, 0.0, 0.0, 0.0) 
        await menu(message)
        await conn.execute('''INSERT INTO menu_c (user_id, second_c, application) VALUES 
                               ($1, $2, $3)''', 
                               message.from_user.id, 0, False)
        await conn.execute(f'''UPDATE bot SET users_h = users_h + 1''')
        
    try:
        del referrer_id_user_id[message.from_user.id]
    except:
        pass

@dp.callback_query(F.data == '–ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ')
async def –ü–µ—Ä–µ–π—Ç–∏_–≤_–Ω–∞—á–∞–ª–æ(call: CallbackQuery, state: FSMContext):
    user_chat_member = await bot.get_chat_member(-1001613934290, call.from_user.id)
    if user_chat_member.status == 'member':
        await state.clear()
        await menu(call)
        try:
            del mailing2[call.from_user.id]
        except:
            pass
    else:
        await start1(call)

async def menu(message: Message):
    a_button = InlineKeyboardButton(text='üéØ –ù–∞—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—é', callback_data='–ù–∞—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—é')
    b_button = InlineKeyboardButton(text='üí∞ –ú–æ–π –¥–æ—Ö–æ–¥', callback_data='–ú–æ–π –¥–æ—Ö–æ–¥')
    c_button = InlineKeyboardButton(text='‚Ñπ –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–æ—Ç–µ', callback_data='–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–æ—Ç–µ')
    d_button = InlineKeyboardButton(text='‚ùî –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', url='tg://user?id=7032079647')
    e_button = InlineKeyboardButton(text='ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞', callback_data='–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞')
    f_button = InlineKeyboardButton(text='üè† –ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ', callback_data='–ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ')
    button   = InlineKeyboardMarkup(inline_keyboard=[[a_button, b_button], [c_button, d_button], [e_button], [f_button]])
    await bot.send_message(message.from_user.id, text='<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –í–∞—Å –≤ Smart üîë System!</b>\n\n'
'–ù–∞—à –±–æ—Ç –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –∞–ª–≥–æ—Ä–∏—Ç–º–∞—Ö –∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–µ, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –µ–º—É –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è –∏ –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å —Å–¥–µ–ª–∫–∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ.\n\n'
'–û–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–º–Ω–æ–≥–æ –±—ã—Å—Ç—Ä–µ–µ –∏ —Ç–æ—á–Ω–µ–µ, —á–µ–º —á–µ–ª–æ–≤–µ–∫, —Å–ø–æ—Å–æ–±–µ–Ω –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–æ–ª—å—à–∏–µ –æ–±—ä–µ–º—ã –¥–∞–Ω–Ω—ã—Ö –∏ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä—ã–Ω–∫–∞ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ. –ö—Ä–æ–º–µ —Ç–æ–≥–æ, –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –¥–æ—Ö–æ–¥ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫.', parse_mode='HTML', reply_markup=button)

@dp.callback_query(F.data == '–ù–∞—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—é')
async def –ù–∞—á–∞—Ç—å_—Ç–æ—Ä–≥–æ–≤–ª—é(call: CallbackQuery):
    user_chat_member = await bot.get_chat_member(-1001613934290, call.from_user.id)
    if user_chat_member.status == 'member':
        user = await user_f(call)
        a_button = InlineKeyboardButton(text='50$: 3% –≤ –¥–µ–Ω—å', callback_data='50$: 3% –≤ –¥–µ–Ω—å')
        b_button = InlineKeyboardButton(text='100$: 4% –≤ –¥–µ–Ω—å', callback_data='100$: 4% –≤ –¥–µ–Ω—å')
        c_button = InlineKeyboardButton(text='500$: 5% –≤ –¥–µ–Ω—å', callback_data='500$: 5% –≤ –¥–µ–Ω—å')
        d_button = InlineKeyboardButton(text='1 000$: 6% –≤ –¥–µ–Ω—å', callback_data='1 000$: 6% –≤ –¥–µ–Ω—å')
        e_button = InlineKeyboardButton(text='üåÄ 3 000$: 7% –≤ –¥–µ–Ω—å üåÄ', callback_data='3 000$: 7% –≤ –¥–µ–Ω—å')
        f_button = InlineKeyboardButton(text='5 000$: 7% –≤ –¥–µ–Ω—å', callback_data='5 000$: 7% –≤ –¥–µ–Ω—å')
        g_button = InlineKeyboardButton(text='10 000$: 8% –≤ –¥–µ–Ω—å', callback_data='10 000$: 8% –≤ –¥–µ–Ω—å')
        h_button = InlineKeyboardButton(text='üè† –ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ', callback_data='–ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ')
        button   = InlineKeyboardMarkup(inline_keyboard=[[a_button, b_button], [c_button, d_button], [e_button], [f_button, g_button], [h_button]])
        await call.message.edit_text('Smart üîë System —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –í–∞—à–µ–≥–æ –ø—Ä—è–º–æ–≥–æ —É—á–∞—Å—Ç–∏—è.\n\n'
'–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —É–¥–æ–±–Ω—ã–π –¥–ª—è –≤–∞—Å –ø–ª–∞–Ω, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–π —Ç–æ—Ä–≥–æ–≤—ã–π –ø—É–ª –¥–ª—è —Ä–∞–±–æ—Ç—ã Smart üîë System.\n\n'
f'–¢–µ–∫—É—â–∏–π –ø–ª–∞–Ω: {user[9] if user[9] is not None else "<b>–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω (–°—É–º–º–∞ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–Ω–æ–≥–æ –ø–ª–∞–Ω–∞)</b>"}\n\n'
'–°—Ç–æ–∏—Ç –æ—Ç–º–µ—Ç–∏—Ç—å, —á—Ç–æ —á–µ–º –≤—ã—à–µ —Å—É–º–º–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏, —Ç–µ–º –±—ã—Å—Ç—Ä–µ–µ –∏ –±–æ–ª—å—à–µ –∏–Ω–≤–µ—Å—Ç–æ—Ä –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –¥–æ—Ö–æ–¥.\n'
'–¢–∞–∫–∞—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è –æ–±—ä—è—Å–Ω—è–µ—Ç—Å—è —Ç–µ–º, —á—Ç–æ —Ç–æ—Ä–≥–æ–≤–ª—è –∏–¥–µ—Ç –Ω–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–æ–ª–∞—Ç–∏–ª—å–Ω—ã—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã—Ö –∞–∫—Ç–∏–≤–∞—Ö –∏ –±–æ–ª–µ–µ –∫—Ä—É–ø–Ω—ã–µ —Å—É–º–º—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏ –æ—Ç –ø—Ä–æ—Å–∫–∞–ª—å–∑—ã–≤–∞–Ω–∏–π –∏ –ø—Ä–µ–∂–¥–µ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –æ—Ä–¥–µ—Ä–æ–≤.'
'–û–±–µ—Å–ø–µ—á–∏–≤–∞—è —Ç–µ–º —Å–∞–º—ã–º –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—É–ª–∞, –∏–Ω–≤–µ—Å—Ç–æ—Ä—ã —Å –±–æ–ª–µ–µ –∫—Ä—É–ø–Ω—ã–º–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º–∏ –ø–æ–ª—É—á–∞—é—Ç —Å–∫–æ—Ä–µ–π—à—É—é –æ—Ç–¥–∞—á—É –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤.\n\n'
'–í–∑–≤–µ—Å—å—Ç–µ –≤—Å–µ –ó–ê –∏ –ü–†–û–¢–ò–í –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–ª—è —Å–µ–±—è –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç.', reply_markup=button, parse_mode='HTML')
    else:
        await start1(call)

@dp.callback_query(F.data == '–ú–æ–π –¥–æ—Ö–æ–¥')
async def –ù–∞—á–∞—Ç—å_—Ç–æ—Ä–≥–æ–≤–ª—é(call: CallbackQuery):
    user_chat_member = await bot.get_chat_member(-1001613934290, call.from_user.id)
    if user_chat_member.status == 'member':
        user = await user_f(call)
        g_button = InlineKeyboardButton(text='üí∏ –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤', callback_data='–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤')
        a_button = InlineKeyboardButton(text='üéØ –ù–∞—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—é', callback_data='–ù–∞—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—é')
        b_button = InlineKeyboardButton(text='üí∞ –ú–æ–π –¥–æ—Ö–æ–¥', callback_data='–ú–æ–π –¥–æ—Ö–æ–¥')
        c_button = InlineKeyboardButton(text='‚Ñπ –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–æ—Ç–µ', callback_data='–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–æ—Ç–µ')
        d_button = InlineKeyboardButton(text='‚ùî –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', url='tg://user?id=7032079647')
        e_button = InlineKeyboardButton(text='ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞', callback_data='–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞')
        f_button = InlineKeyboardButton(text='üè† –ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ', callback_data='–ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ')
        button   = InlineKeyboardMarkup(inline_keyboard=[[g_button], [a_button, b_button], [c_button, d_button], [e_button], [f_button]])
        await call.message.edit_text(f'–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: <b>{user[3]}</b>\n'
f'–ë–∞–ª–∞–Ω—Å: <b>{user[6]}$</b>\n\n'
f'–î–µ–ø–æ–∑–∏—Ç—ã: <b>{user[7]}$</b>\n'
f'–î–æ—Ö–æ–¥ –æ—Ç —Ç–æ—Ä–≥–æ–≤–ª–∏: <b>{user[8]}$</b>\n'
f'–¢–æ—Ä–≥–æ–≤—ã–π –ø–ª–∞–Ω: <b>{user[9] if user[9] is not None else "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω"}</b>\n'
f'–î–æ—Ö–æ–¥ –æ—Ç —Ä–µ—Ñ. –ø—Ä–æ–≥—Ä–∞–º–º—ã: <b>{user[-2]}$</b>\n'
f'–í—ã–≤–æ–¥—ã —Å—Ä–µ–¥—Å—Ç–≤: <b>{user[11]}$</b>\n\n–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –¥–æ—Å—Ç—É–ø–µ–Ω –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ —Å—É–º–º—ã, –º–∏–Ω–∏–º—É–º –≤ 1.5 —Ä–∞–∑–∞ –±–æ–ª—å—à–µ —Ä–∞–∑–Ω–∏—Ü—ã —Å—É–º–º –≤—Å–µ—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –∏ —Å—É–º–º –≤—Å–µ—Ö –≤—ã–≤–æ–¥–æ–≤, –Ω–æ –Ω–µ –º–µ–Ω–µ–µ 50$ –∏ –Ω–µ –º–µ–Ω–µ–µ 1.5 —Å—É–º–º—ã –≤—Å–µ—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤, —Å–¥–µ–ª–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—ã–≤–æ–¥–∞.\n'
'–ß–µ–º –±–æ–ª—å—à–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è, —Ç–µ–º –±—ã—Å—Ç—Ä–µ–µ –¥–æ—Å—Ç–∏–≥–∞–µ—Ç—Å—è –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—É–º–º–∞. –≠—Ç–æ –æ–±—É—Å–ª–æ–≤–ª–µ–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å—é –æ–±–µ—Å–ø–µ—á–∏–≤–∞—Ç—å –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å —Å—Ä–µ–¥—Å—Ç–≤ –≤ —Ç–æ—Ä–≥–æ–≤–æ–º –ø—É–ª–µ.', reply_markup=button, parse_mode='HTML')
    else:
        await start1(call)

@dp.callback_query(F.data == '–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–æ—Ç–µ')
async def –ü–æ–¥—Ä–æ–±–Ω–µ–µ_–æ_–±–æ—Ç–µ(call: CallbackQuery):
    user_chat_member = await bot.get_chat_member(-1001613934290, call.from_user.id)
    if user_chat_member.status == 'member':
        a_button = InlineKeyboardButton(text='üéØ –ù–∞—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—é', callback_data='–ù–∞—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—é')
        b_button = InlineKeyboardButton(text='üí∞ –ú–æ–π –¥–æ—Ö–æ–¥', callback_data='–ú–æ–π –¥–æ—Ö–æ–¥')
        c_button = InlineKeyboardButton(text='‚Ñπ –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–æ—Ç–µ', callback_data='–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–æ—Ç–µ')
        d_button = InlineKeyboardButton(text='‚ùî –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', url='tg://user?id=7032079647')
        e_button = InlineKeyboardButton(text='ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞', callback_data='–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞')
        f_button = InlineKeyboardButton(text='üè† –ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ', callback_data='–ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ')
        button   = InlineKeyboardMarkup(inline_keyboard=[[a_button, b_button], [c_button, d_button], [e_button], [f_button]])
        conn = await cr()
        result_h = await conn.fetchrow("SELECT * FROM bot")
        result = await conn.fetch("SELECT * FROM menu")
        count = 0
        for i in result:
            count += 1
        await call.message.edit_text(f'<b>Smart üîë System</b> —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π —Ç–æ—Ä–≥–æ–≤–ª–∏, –∑–∞–¥–∞–Ω–Ω—ã—Ö –≤ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –±–æ—Ç–∞. <b>–û–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å –±–∏—Ä–∂–∏</b>, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏—Ö –∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ä–µ—à–µ–Ω–∏—è –æ –ø–æ–∫—É–ø–∫–µ –∏–ª–∏ –ø—Ä–æ–¥–∞–∂–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏, –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞–º–∏.\n\n'
'<b>–í —Ä–∞–±–æ—Ç–µ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –±–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è API</b> (Application Programming Interface) ‚Äì –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–∏—Ä–∂–µ–π. <b>–° –ø–æ–º–æ—â—å—é API –±–æ—Ç –ø–æ–ª—É—á–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º</b> –æ —Ü–µ–Ω–∞—Ö –Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É –∏ –º–æ–∂–µ—Ç –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å —Å–¥–µ–ª–∫–∏ –Ω–∞ –±–∏—Ä–∂–µ.\n\n'
'<b>–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–µ–∂–∏–º–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏</b>, –∫–æ–≥–¥–∞ –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –æ—Å—É—â–µ—Å—Ç–≤–ª—è—é—Ç—Å—è –±–µ–∑ —É—á–∞—Å—Ç–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n\n'
'<b>Smart üîë System</b> –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Å–Ω–æ–≤–Ω—ã–µ <b>–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞, –∞–Ω–∞–ª–∏–∑ —Å–≤–µ—á–µ–π, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –æ–±—ä–µ–º–æ–≤ —Ç–æ—Ä–≥–æ–≤</b> –∏ –¥—Ä.\n\n'
'–ö—Ä–æ–º–µ —Ç–æ–≥–æ, –±–æ—Ç –º–æ–∂–µ—Ç <b>—É—á–∏—Ç—ã–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –±–∏—Ä–∂–∞—Ö –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ –º–µ–∂–¥—É –±–∏—Ä–∂–∞–º–∏</b> –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∏–±–æ–ª–µ–µ –≤—ã–≥–æ–¥–Ω–æ–π —Ü–µ–Ω—ã.', reply_markup=button, parse_mode='HTML')
        if call.from_user.id == 7032079647:
            a_button = InlineKeyboardButton(text='üè† –ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ', callback_data='–ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ')
            button   = InlineKeyboardMarkup(inline_keyboard=[[a_button]])
            await call.answer(f'–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–Ω–µ–π: {result_h[3]}\n–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {count}\n–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ 24 —á–∞—Å–∞: {result_h[1]}', reply_markup=button, show_alert=True)
    else:
        await start1(call)


def invite(event: Message, obot) -> str:
    user_id: int = event.from_user.id
    botname = obot.username
    text = f"–ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –¥–µ–Ω—å–≥–∏, –Ω–µ –ø—Ä–∏–ª–∞–≥–∞—è —É—Å–∏–ª–∏–π! –ù–∞–¥–µ–∂–Ω—ã–π –∏ —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥ —É–∂–µ –∂–¥–µ—Ç —Ç–µ–±—è. –ù–µ —É–ø—É—Å—Ç–∏ —Å–≤–æ–π —à–∞–Ω—Å!\n\nhttps://t.me/{botname}?start={user_id}"
    return text



@dp.callback_query(F.data == '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞')
async def –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è_–ø—Ä–æ–≥—Ä–∞–º–º–∞(call: CallbackQuery):
    user_chat_member = await bot.get_chat_member(-1001613934290, call.from_user.id)
    if user_chat_member.status == 'member':
        obot = await bot.get_me()
        botname = obot.username
        user = await user_f(call)
        ref_button = InlineKeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É', switch_inline_query=invite(call.message, obot))
        a_button = InlineKeyboardButton(text='üéØ –ù–∞—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—é', callback_data='–ù–∞—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—é')
        b_button = InlineKeyboardButton(text='üí∞ –ú–æ–π –¥–æ—Ö–æ–¥', callback_data='–ú–æ–π –¥–æ—Ö–æ–¥')
        c_button = InlineKeyboardButton(text='‚Ñπ –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–æ—Ç–µ', callback_data='–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–æ—Ç–µ')
        d_button = InlineKeyboardButton(text='‚ùî –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', url='tg://user?id=7032079647')
        e_button = InlineKeyboardButton(text='ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞', callback_data='–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞')
        f_button = InlineKeyboardButton(text='üè† –ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ', callback_data='–ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ')
        button   = InlineKeyboardMarkup(inline_keyboard=[[ref_button], [a_button, b_button], [c_button, d_button], [e_button], [f_button]])
        obot = await bot.get_me()
        botname = obot.username
        await call.message.edit_text(f'–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n<code>https://t.me/{botname}?start={call.from_user.id}</code>\n\n'
'–†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–π—Ç–µ —Å–≤–æ—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É, –ø—Ä–∏–≤–ª–µ–∫–∞–π—Ç–µ –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –∑–∞ —ç—Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥ - <b>20% –æ—Ç –∫–∞–∂–¥–æ–π –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –í–∞—à–µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞.</b>\n\n'
'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n'
f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: <b>{user[-5]}</b>\n'
f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–ø–æ–∑–∏—Ç–æ–≤: <b>{user[-4]}</b>\n'
f'–°—É–º–º–∞ –¥–µ–ø–æ–∑–∏—Ç–æ–≤: <b>{user[-3]}$</b>\n'
f'–í–∞—à –¥–æ—Ö–æ–¥: <b>{user[-2]}$</b>', reply_markup=button, parse_mode='HTML')
    else:
        await start1(call)
    
@dp.callback_query(F.data.endswith('–≤ –¥–µ–Ω—å'))
async def replenish(call: CallbackQuery):
    global replenish_sum_user
    import re
    number = re.search(r'\d+', str(call.data)).group()
    if 1 <= int(number) <= 10:
        number = int(number) * 1000
    replenish_sum_user = {call.from_user.id: [number, call.data]}
    a_button = InlineKeyboardButton(text='Tether USDT TRC20', callback_data='Tether USDT TRC20')
    b_button = InlineKeyboardButton(text='üè† –ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ', callback_data='–ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ')
    button   = InlineKeyboardMarkup(inline_keyboard=[[a_button], [b_button]])
    await call.message.edit_text(f'–í—ã –≤—ã–±—Ä–∞–ª–∏ "<b>{call.data}</b>"\n\n–î–ª—è –æ–ø–ª–∞—Ç—ã –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–¥–∏–Ω —É–¥–æ–±–Ω—ã–π –∏ –µ–¥–∏–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã.', reply_markup=button, parse_mode='HTML')

@dp.callback_query(F.data == 'Tether USDT TRC20')
async def Only1(call: CallbackQuery):
    user_chat_member = await bot.get_chat_member(-1001613934290, call.from_user.id)
    if user_chat_member.status == 'member':
        a_button = InlineKeyboardButton(text='–Ø –æ–ø–ª–∞—Ç–∏–ª(–∞)', callback_data='–Ø –æ–ø–ª–∞—Ç–∏–ª(–∞)')
        b_button = InlineKeyboardButton(text='üè† –ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ', callback_data='–ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ')
        button   = InlineKeyboardMarkup(inline_keyboard=[[a_button], [b_button]])
        conn = await cr()
        result = await conn.fetchrow("SELECT * FROM bot")
        await call.message.edit_text(f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–ª–∞–Ω "<b>{replenish_sum_user.get(call.from_user.id, 0)[1]}</b>" –∏ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã "<b>Tether USDT TRC20</b>".\n\n'
f'–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–ª–∞–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç –æ–ø–ª–∞—Ç–∏—Ç–µ –∑–∞–∫–∞–∑ <b>D/DGZFCV</b>, –ø–µ—Ä–µ–≤–µ–¥—è –†–û–í–ù–û {replenish_sum_user.get(call.from_user.id, 0)[0]} USDT TRC20 (Tether –≤ —Å–µ—Ç–∏ Tron) –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –Ω–∏–∂–µ –∞–¥—Ä–µ—Å, –ø–æ—Å–ª–µ —á–µ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–Ø –æ–ø–ª–∞—Ç–∏–ª(–∞)"\n\n'
'–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã!!! üëá'
f'–ï—Å–ª–∏ –ø–æ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–∏—á–∏–Ω–µ, –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω–∞—è —Å—É–º–º–∞ –æ–∫–∞–∂–µ—Ç—Å—è –º–µ–Ω—å—à–µ —É–∫–∞–∑–∞–Ω–Ω–æ–π, –ø—Ä–∏–º–µ–Ω—è—Ç—Å—è —É—Å–ª–æ–≤–∏—è –º–µ–Ω—å—à–µ–≥–æ —Ç–∞—Ä–∏—Ñ–Ω–æ–≥–æ –ø–ª–∞–Ω–∞. <b>–°—É–º–º—ã –º–µ–Ω–µ–µ {replenish_sum_user.get(call.from_user.id, 0)[0]} USDT —Å–∏—Å—Ç–µ–º–æ–π –Ω–µ –∑–∞—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è.</b>\n\n'
f'–ê–¥—Ä–µ—Å –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞:\n<code>{result[4]}</code>', reply_markup=button, parse_mode='HTML')
    else:
        await start1(call)
    

@dp.callback_query(F.data == '–Ø –æ–ø–ª–∞—Ç–∏–ª(–∞)') 
async def –Ø_–æ–ø–ª–∞—Ç–∏–ª(call: CallbackQuery) -> None:
    sum = replenish_sum_user.get(call.from_user.id, 0)
    a_button = InlineKeyboardButton(text='–ü—Ä–∏–Ω—è—Ç—å –æ—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è', callback_data=f'{call.from_user.id}_p1')
    b_button = InlineKeyboardButton(text='–û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è', callback_data=f'{call.from_user.id}_o1')
    button = InlineKeyboardMarkup(inline_keyboard=[[a_button], [b_button]])
    await bot.send_message(7032079647, text=f"<a href='tg://user?id={call.from_user.id}'>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</a> –ø–æ–ø–æ–ª–Ω–∏–ª –≤–∞–º –∏ –æ–∂–∏–¥–∞–µ—Ç {sum[1]}", parse_mode='HTML', reply_markup=button)
    
    a_button = InlineKeyboardButton(text='üéØ –ù–∞—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—é', callback_data='–ù–∞—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—é')
    b_button = InlineKeyboardButton(text='üí∞ –ú–æ–π –¥–æ—Ö–æ–¥', callback_data='–ú–æ–π –¥–æ—Ö–æ–¥')
    c_button = InlineKeyboardButton(text='‚Ñπ –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–æ—Ç–µ', callback_data='–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–æ—Ç–µ')
    d_button = InlineKeyboardButton(text='‚ùî –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', url='tg://user?id=7032079647')
    e_button = InlineKeyboardButton(text='ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞', callback_data='–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞')
    f_button = InlineKeyboardButton(text='üè† –ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ', callback_data='–ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ')
    button   = InlineKeyboardMarkup(inline_keyboard=[[a_button, b_button], [c_button, d_button], [e_button], [f_button]])
    await bot.send_message(call.from_user.id, text='–í –Ω–∞—Å—Ç–æ—è—â–∏–π –º–æ–º–µ–Ω—Ç –º—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø–ª–∞—Ç—É. '
'–ü—Ä–∏ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –æ–ø–ª–∞—Ç—ã —Å—Ä–µ–¥—Å—Ç–≤–∞ –∑–∞—á–∏—Å–ª—è—Ç—Å—è –í–∞–º –Ω–∞ —Å—á–µ—Ç –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è —Ç–æ—Ä–≥–æ–≤—ã–π –ø–ª–∞–Ω —Å–æ–≥–ª–∞—Å–Ω–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞. –û–± —ç—Ç–æ–º –í—ã –ø–æ–ª—É—á–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.\n\n'
'–î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–µ–π –∏ —Å—Ç–∞—Ç—É—Å–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø–ª–∞–Ω–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª <b>"–ú–æ–π –¥–æ—Ö–æ–¥"</b>', reply_markup=button, parse_mode='HTML')

@dp.callback_query(F.data.endswith("_p1") | F.data.endswith("_o1"))
async def po(callback: CallbackQuery):
    user_id = int(callback.data.split('_')[0])
    if callback.data[-3:] == '_p1':
        await callback.message.edit_text('–ü—Ä–∏–Ω—è—Ç–æ')
        await bot.send_message(user_id, text=f'–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–∞!', reply_markup=None)
        conn = await cr()
        await conn.execute(f'''UPDATE menu_c SET second_c = 0 WHERE user_id=$1''', int(user_id))
        await conn.execute(f'''UPDATE menu SET deposits = deposits + {replenish_sum_user.get(user_id, 0)[0]} WHERE user_id=$1''', int(user_id))
        await conn.execute(
    '''
    UPDATE menu
    SET trade_plan = $1
    WHERE user_id = $2
    ''',
    replenish_sum_user.get(user_id, 0)[1],
    int(user_id)
)
        user = await conn.fetchrow('''SELECT * FROM menu WHERE user_id=$1''', int(user_id))
        sum_p = None
        n = int(replenish_sum_user.get(user_id, 0)[0])
        if n == 50:
            sum_p = 3
        else:
            if n == 100:
                sum_p = 4
            else:
                if n == 500:
                    sum_p = 5
                else:
                    if n == 1000:
                        sum_p = 6
                    else:
                        if n == 3000 or replenish_sum_user.get(user_id, 0)[0] == 5000:
                            sum_p = 7
                        else:
                            if n == 10000:
                                sum_p = 8
                            else:
                                print(100*'no\n')
                                print(sum_p)
        num = replenish_sum_user.get(user_id, 0)[0]
        a = float(num) * float(sum_p) / 100
        if user[-1]:
            await conn.execute(f'''UPDATE menu SET sum_deposits = sum_deposits + {replenish_sum_user.get(user_id, 0)[0]} WHERE user_id=$1''', user[-1])
            await conn.execute(f'''UPDATE menu SET count_deposits = count_deposits + 1 WHERE user_id=$1''', user[-1])
            try:
                await conn.execute(f'''UPDATE menu SET your_income = your_income + {a} WHERE user_id=$1''', user[-1])
            except:
                await conn.execute(f'''UPDATE menu SET your_income = {a} WHERE user_id=$1''', user[-1])
        await conn.execute(f'''UPDATE menu SET income_trade = {a} WHERE user_id=$1''', int(user_id))
    elif callback.data[-3:] == '_o1':
        await callback.message.edit_text('–û—Ç–∫–∞–∑–∞–Ω–æ', reply_markup=None)
        await bot.send_message(user_id, text='–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç–∫–∞–∑–∞–Ω–∞!')
    del replenish_sum_user[user_id]

@dp.callback_query(F.data == '–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤')
async def –í—ã–≤–æ–¥_—Å—Ä–µ–¥—Å—Ç–≤(call: CallbackQuery):
    user_chat_member = await bot.get_chat_member(-1001613934290, call.from_user.id)
    if user_chat_member.status == 'member':
        await –í—ã–≤–æ–¥_—Å—Ä–µ–¥—Å—Ç–≤00(call)
    else:
        await start1(call)

async def –í—ã–≤–æ–¥_—Å—Ä–µ–¥—Å—Ç–≤00(call: CallbackQuery):
    a_button0 = InlineKeyboardButton(text='–í—ã–≤–µ—Å—Ç–∏', callback_data='–í—ã–≤–µ—Å—Ç–∏')
    a_button = InlineKeyboardButton(text='üéØ –ù–∞—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—é', callback_data='–ù–∞—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—é')
    b_button = InlineKeyboardButton(text='üí∞ –ú–æ–π –¥–æ—Ö–æ–¥', callback_data='–ú–æ–π –¥–æ—Ö–æ–¥')
    c_button = InlineKeyboardButton(text='‚Ñπ –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–æ—Ç–µ', callback_data='–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–æ—Ç–µ')
    d_button = InlineKeyboardButton(text='‚ùî –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', url='tg://user?id=7032079647')
    e_button = InlineKeyboardButton(text='ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞', callback_data='–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞')
    f_button = InlineKeyboardButton(text='üè† –ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ', callback_data='–ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ')
    button   = InlineKeyboardMarkup(inline_keyboard=[[a_button, b_button], [c_button, d_button], [e_button], [f_button]])
    button1   = InlineKeyboardMarkup(inline_keyboard=[[a_button0], [f_button]])
    conn = await cr()
    user1 = await conn.fetchrow('''SELECT * FROM menu_c WHERE user_id=$1''', call.from_user.id)
    user = await user_f(call)
    if user[6] == 0:
        await call.message.edit_text(
f'–î–æ—Å—Ç—É–ø–Ω–æ –∫ –≤—ã–≤–æ–¥—É: <b>{user[6]}$</b>\n\n'
'----------------------------------------------------------------\n'
'<u>–ó–∞–ø—Ä–æ—Å—ã –Ω–∞ –≤—ã–≤–æ–¥:</u>\n\n'
f'{"–ó–∞—è–≤–æ–∫ –Ω–∞ –≤—ã–≤–æ–¥ –µ—â–µ –Ω–µ –±—ã–ª–æ." if not user1[3] else "–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞, –æ–∂–∏–¥–∞–π—Ç–µ!"}\n\n–ù–µ—Ç—É –∫–Ω–æ–ø–∫–∞ "–≤—ã–≤–µ—Å—Ç–∏", –ø–æ—Ç–æ–º—É —á—Ç–æ —É –≤–∞—Å –Ω–∞ –±–∞–ª–∞–Ω—Å–µ <b>{user[6]}$</b>.', parse_mode='HTML', reply_markup=button)
    else:
        if not user1[3]:
            if user1[2] >= 7776000:
                b = (user[7] + user[11]) * 1.5
                if b <= user[6]:
                    await call.message.answer(
f'–î–æ—Å—Ç—É–ø–Ω–æ –∫ –≤—ã–≤–æ–¥—É: <b>{user[6]}$</b>\n\n'
'----------------------------------------------------------------\n'
'–ù–∞–∂–º–∏—Ç–µ –Ω–∞ "–í—ã–≤–µ—Å—Ç–∏" —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏.', parse_mode='HTML', reply_markup=button1)
                else:
                    await call.message.answer(f'–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞ <b>{b}$</b>!\n–ù–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ <b>{user[6]}$</b>', reply_markup=button, parse_mode='HTML')
            else:
                a = user[7] * 30 / 100
                await call.message.answer(f'–ù–µ –ø—Ä–æ—à–ª–æ 3 –º–µ—Å—è—Ü–∞ –ø—Ä–∏–±—ã–ª–µ–π!\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ —Ä–∞–Ω—å—à–µ —á–µ–º 3 –º–µ—Å—è—Ü–∞, —Ç–æ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –µ—â–µ <b>{a}$</b>!', reply_markup=button, parse_mode='HTML')
        else:
            await call.message.answer('–£ –≤–∞—Å —É–∂–µ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ –∑–∞—è–≤–∫–∞! –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.', reply_markup=button)
                
@dp.callback_query(F.data == '–í—ã–≤–µ—Å—Ç–∏')
async def –í—ã–≤–µ—Å—Ç–∏(call: CallbackQuery):
    user_chat_member = await bot.get_chat_member(-1001613934290, call.from_user.id)
    if user_chat_member.status == 'member':
        a_button = InlineKeyboardButton(text='Tether USDT TRC20', callback_data='Tether USDT TRC20v')
        b_button = InlineKeyboardButton(text='üè† –ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ', callback_data='–ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ')
        button = InlineKeyboardMarkup(inline_keyboard=[[a_button], [b_button]])
        await call.message.edit_text('–î–ª—è –≤—ã–≤–æ–¥–∞ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–¥–∏–Ω —É–¥–æ–±–Ω—ã–π –∏ –µ–¥–∏–Ω—ã–π —Å–ø–æ—Å–æ–± –≤—ã–≤–æ–¥–∞.', reply_markup=button)
    else:
        await start1(call)

class con(StatesGroup):
    score = State()

@dp.callback_query(F.data == 'Tether USDT TRC20v')
async def conclusion1(call: CallbackQuery, state: FSMContext):
    user_chat_member = await bot.get_chat_member(-1001613934290, call.from_user.id)
    if user_chat_member.status == 'member':
        a_button = InlineKeyboardButton(text='üè† –ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ', callback_data='–ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ')
        button = InlineKeyboardMarkup(inline_keyboard=[[a_button]])
        await call.message.edit_text('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞:', reply_markup=button)
        await state.set_state(con.score)
    else:
        await start1(call)

@dp.message(StateFilter(con.score))
async def conclusion2(message: Message, state: FSMContext):
    if message.text:
        global replenish_sum_user1
        user = await user_f(message)
        replenish_sum_user1 = {message.from_user.id: [message.text, user[6]]}
        conn = await cr()
        await conn.execute(f'''UPDATE menu_c SET application = True WHERE user_id=$1''', message.from_user.id)
        sum = replenish_sum_user1.get(message.from_user.id, 0)
        a_button = InlineKeyboardButton(text='–ü—Ä–∏–Ω—è—Ç—å –æ—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è', callback_data=f'{message.from_user.id}_p2')
        b_button = InlineKeyboardButton(text='–û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è', callback_data=f'{message.from_user.id}_o2')
        button = InlineKeyboardMarkup(inline_keyboard=[[a_button], [b_button]])
        await bot.send_message(7032079647, text=f"<a href='tg://user?id={message.from_user.id}'>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</a> —Å–æ–∑–¥–∞–ª –∑–∞—è–≤–∫—É –Ω–∞ –≤—ã–≤–æ–¥.\n–ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞:\n<code>{sum[0]}</code>\n\n–°—É–º–º–∞: <b>{sum[1]}</b>", parse_mode='HTML', reply_markup=button)
    
        a_button = InlineKeyboardButton(text='üéØ –ù–∞—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—é', callback_data='–ù–∞—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—é')
        b_button = InlineKeyboardButton(text='üí∞ –ú–æ–π –¥–æ—Ö–æ–¥', callback_data='–ú–æ–π –¥–æ—Ö–æ–¥')
        c_button = InlineKeyboardButton(text='‚Ñπ –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–æ—Ç–µ', callback_data='–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–æ—Ç–µ')
        d_button = InlineKeyboardButton(text='‚ùî –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', url='tg://user?id=7032079647')
        e_button = InlineKeyboardButton(text='ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞', callback_data='–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞')
        f_button = InlineKeyboardButton(text='üè† –ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ', callback_data='–ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ')
        button   = InlineKeyboardMarkup(inline_keyboard=[[a_button, b_button], [c_button, d_button], [e_button], [f_button]])
        await message.edit_text('<b>–ó–∞—è–≤–∫–∞</b> —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –û–∂–∏–¥–∞–π—Ç–µ.', reply_markup=button, parse_mode='HTML')
    else:
        await message.edit_text('–ù—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞!')
        await menu(message)
    await state.clear()

@dp.callback_query(F.data.endswith("_p2") | F.data.endswith("_o2"))
async def po(callback: CallbackQuery):
    user_id = int(callback.data.split('_')[0])
    if callback.data[-3:] == '_p2':
        await callback.message.edit_text('–ü—Ä–∏–Ω—è—Ç–æ')
        await bot.send_message(user_id, text=f'–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ –ø—Ä–∏–Ω—è—Ç–∞!', reply_markup=None)
        conn = await cr()
        await conn.execute(f'''UPDATE menu SET second_c = 0 WHERE user_id=$1''', int(user_id))
        await conn.execute(f'''UPDATE menu_c SET application = False WHERE user_id=$1''', int(user_id))
        await conn.execute(f'''UPDATE menu SET balance = 0 WHERE user_id=$1''', int(user_id))
        await conn.execute(f'''UPDATE menu SET conclusion = conclusion + {replenish_sum_user1.get(int(user_id), 0)[1]} WHERE user_id=$1''', int(user_id))
    elif callback.data[-3:] == '_o2':
        await callback.message.edit_text('–û—Ç–∫–∞–∑–∞–Ω–æ', reply_markup=None)
        await bot.send_message(user_id, text='–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ –æ—Ç–∫–∞–∑–∞–Ω–∞!')
    del replenish_sum_user1[user_id]

@dp.message(F.text == '/users')
async def users_bot(call: CallbackQuery):
    if call.from_user.id == 7032079647:
        await users_bot99(call)

async def users_bot99(call: CallbackQuery):
    arr = []
    j = 100
    conn = await cr()
    result = await conn.fetch("SELECT * FROM menu")
    for i, row in enumerate(result):
        arr.append([InlineKeyboardButton(text=f'ID: {row[1]}', callback_data=f'ref.users_{row[1]}')])
        if i == j - 1 or i == len(result) - 1:
            keyboard = InlineKeyboardMarkup(inline_keyboard=arr)
            await call.bot.send_message(call.from_user.id, text="–í–∞—à–∏ users:", reply_markup=keyboard)
            arr = []
            j += 100
    if len(arr) > 0:
        keyboard = InlineKeyboardMarkup(inline_keyboard=arr)
        await call.bot.send_message(call.from_user.id, text="–í–∞—à–∏ users:", reply_markup=keyboard)
    count = 0
    for i in result:
        count += 1
    await call.bot.send_message(call.from_user.id, text=f'–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π {count}')

    
@dp.callback_query(F.data.startswith('ref.users_'))
async def users(call: CallbackQuery):
    global ref_user
    user_id = int(call.data[10:])
    ref_user = {call.from_user.id: user_id}
    conn = await cr()
    user = await conn.fetchrow('''SELECT * FROM menu WHERE user_id=$1''', user_id)
    a_button = InlineKeyboardButton(text='–ü—Ä–æ—Ñ–∏–ª—å', url=f'tg://user?id={user[1]}')
    b_button = InlineKeyboardButton(text='–ò–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞', callback_data='ref_change_balance')
    c_button = InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å', callback_data='ref_delete_user')
    d_button = InlineKeyboardButton(text='–í –º–µ–Ω—é', callback_data='–ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ')
    button   = InlineKeyboardMarkup(inline_keyboard=[[a_button], [b_button], [c_button], [d_button]])
    await call.bot.send_message(call.from_user.id, text=f'''–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {user[3]}\n
ID: {user[1]}\nUsername: @{user[2]}\n
–ë–∞–ª–∞–Ω—Å: {user[6]}‚ÇΩ\n–†–µ—Ñ–µ—Ä–µ—Ä: <code>{user[-1] if user[-1] else "–Ω–µ—Ç—É"}</code>\n
–†–µ—Ñ–µ—Ä–∞–ª–æ–≤: {user[-5]}''', reply_markup=button, parse_mode='HTML')


@dp.callback_query(F.data == 'ref_delete_user')
async def ref_delete_user(call: CallbackQuery):
    a_button = InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='ref_delete_user_p')
    b_button = InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='–ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ')
    button   = InlineKeyboardMarkup(inline_keyboard=[[a_button], [b_button]])
    await call.message.edit_text('–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞, –≤ —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—Å—ë –æ–±–Ω—É–ª–∏—Ç—Å—è. –•–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å?', reply_markup=button)
        
@dp.callback_query(F.data == 'ref_delete_user_p')
async def ref_delete_user_p(callback: CallbackQuery):
    conn = await cr()
    await conn.execute('DELETE FROM menu WHERE user_id=$1', ref_user[callback.from_user.id])
    await conn.execute('DELETE FROM menu_c WHERE user_id=$1', ref_user[callback.from_user.id])
    await callback.message.edit_text(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {ref_user[callback.from_user.id]} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.')
    await bot.send_message(ref_user[callback.from_user.id], '–í—ã –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö!\n–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã /start')
    await menu(callback)


@dp.callback_query(F.data == 'ref_change_balance')
async def ref_change_balance(call: CallbackQuery):
    conn = await cr()
    user = await conn.fetchrow('''SELECT * FROM menu WHERE user_id=$1''', ref_user[call.from_user.id])
    a_button = InlineKeyboardButton(text='–ü—Ä–∏–±–∞–≤–∏—Ç—å', callback_data='ref_p_sum')
    b_button = InlineKeyboardButton(text='–í—ã—á–∏—Å–ª–∏—Ç—å', callback_data='ref_v_sum')
    c_button = InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —Å—É–º–º—É', callback_data='ref_change_sum')
    d_button = InlineKeyboardButton(text='–í –º–µ–Ω—é', callback_data='–ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ')
    button   = InlineKeyboardMarkup(inline_keyboard=[[a_button],[b_button], [c_button], [d_button]])
    await call.message.answer(f'–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user[3]}‚ÇΩ\n–í—ã–±–µ—Ä–∏—Ç–µ:', reply_markup=button)

class ref_sum(StatesGroup):
    p = State()
    v = State()
    change = State()

@dp.callback_query(F.data == 'ref_p_sum')
async def ref_p_sum(call: CallbackQuery, state: FSMContext):
    try:
        if ref_user[call.from_user.id]:
            a_button = KeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å')
            button   = ReplyKeyboardMarkup(keyboard=[[a_button]], resize_keyboard=True)
            await call.message.answer('–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É:')
            await state.set_state(ref_sum.p)
        else:
            pass
    except:
        pass

@dp.message(StateFilter(ref_sum.p))
async def ref_p_sum1(message: Message, state: FSMContext):
    if message.text.isdigit():
        conn = await cr()
        await conn.execute(f'''UPDATE menu SET balance = balance + {int(message.text)} WHERE user_id=$1''', ref_user[message.from_user.id])
        await state.clear()
        await message.answer('–°—É–º–º–∞ —É—Å–ø–µ—à–Ω–∞ –ø—Ä–∏–±–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.', reply_markup=None)
        await menu(message)
    else:
        if message.text == '–û—Ç–º–µ–Ω–∏—Ç—å':
            await message.answer('–û—Ç–º–µ–Ω–µ–Ω–æ', reply_markup=None)
            await state.clear()
        else:
            await message.answer('–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ!')

@dp.callback_query(F.data == 'ref_v_sum')
async def ref_v_sum(call: CallbackQuery, state: FSMContext):
    try:
        if ref_user[call.from_user.id]:
            a_button = KeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å')
            button   = ReplyKeyboardMarkup(keyboard=[[a_button]], resize_keyboard=True)
            await call.message.answer('–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É:')
            await state.set_state(ref_sum.v)
        else:
            pass
    except:
        pass

@dp.message(StateFilter(ref_sum.v))
async def ref_v_sum1(message: Message, state: FSMContext):
    if message.text.isdigit():
        conn = await cr()
        await conn.execute(f'''UPDATE menu SET balance = balance - {int(message.text)} WHERE user_id=$1''', ref_user[message.from_user.id])
        await state.clear()
        await message.answer('–°—É–º–º–∞ —É—Å–ø–µ—à–Ω–∞ –≤—ã—á–∏—Å–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.', reply_markup=None)
        await menu(message)
    else:
        if message.text == '–û—Ç–º–µ–Ω–∏—Ç—å':
            await message.answer('–û—Ç–º–µ–Ω–µ–Ω–æ', reply_markup=None)
            await state.clear()
        else:
            await message.answer('–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ!')

@dp.callback_query(F.data == 'ref_change_sum')
async def ref_change_sum(call: CallbackQuery, state: FSMContext):
    try:
        if ref_user[call.from_user.id]:
            a_button = KeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å')
            button   = ReplyKeyboardMarkup(keyboard=[[a_button]], resize_keyboard=True)
            await call.message.answer('–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É:')
            await state.set_state(ref_sum.change)
        else:
            pass
    except:
        pass


@dp.message(StateFilter(ref_sum.change))
async def ref_change_sum1(message: Message, state: FSMContext):
    if message.text.isdigit():
        conn = await cr()
        await conn.execute(f'''UPDATE menu SET balance = {int(message.text)} WHERE user_id=$1''', ref_user[message.from_user.id])
        await state.clear()
        await message.answer('–°—É–º–º–∞ —É—Å–ø–µ—à–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.', reply_markup=None)
        await menu(message)
    else:
        if message.text == '–û—Ç–º–µ–Ω–∏—Ç—å':
            await message.answer('–û—Ç–º–µ–Ω–µ–Ω–æ', reply_markup=None)
            await state.clear()
        else:
            await message.answer('–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ!')

class maili(StatesGroup):
    text = State()

@dp.message(F.text == '/mailing')
async def mailing(msg: Message, state: FSMContext):
    if msg.from_user.id == 7032079647:
        await msg.answer('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç:')
        await state.set_state(maili.text)


@dp.message(StateFilter(maili.text))
async def mailing1(msg: Message, state: FSMContext):
    global mailing2
    mailing2 = {msg.from_user.id: msg.text}
    await msg.answer('–¢–µ–∫—Å—Ç:')
    await msg.answer(msg.text)
    a_button = InlineKeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å', callback_data='–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç')
    b_button = InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='–ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ')
    button   = InlineKeyboardMarkup(inline_keyboard=[[a_button], [b_button]])
    await msg.answer('–•–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º?', reply_markup=button)
    await state.clear()

@dp.callback_query(F.data == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç')
async def –û—Ç–ø—Ä–∞–≤–∏—Ç—å_—Ç–µ–∫—Å—Ç(call: CallbackQuery):
    conn = await cr()
    result = await conn.fetch("SELECT * FROM menu")
    for i in result:
        await bot.send_message(i[1], text=mailing2.get(call.from_user.id, 0))
    await call.message.answer('–¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.')
    del mailing2[call.from_user.id]
    await menu(call)

@dp.message(F.text == '/score')
async def score_t(msg: Message):
    if msg.from_user.id == 7032079647:
        conn = await cr()
        result = await conn.fetchrow("SELECT * FROM bot")
        a_button = InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å', callback_data='change_score')
        b_button = InlineKeyboardButton(text='üè† –ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ', callback_data='–ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ')
        button   = InlineKeyboardMarkup(inline_keyboard=[[a_button], [b_button]])
        await msg.answer(f'–ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞ <code>{result[4]}</code>', reply_markup=button, parse_mode='HTML')

class c_s(StatesGroup):
    score = State()

@dp.callback_query(F.data == 'change_score')
async def change_score(call: CallbackQuery, state: FSMContext):
    a_button = InlineKeyboardButton(text='üè† –ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ', callback_data='–ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ')
    button   = InlineKeyboardMarkup(inline_keyboard=[[a_button]])
    await call.message.answer('–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞:', reply_markup=button)
    await state.set_state(c_s.score)

@dp.message(StateFilter(c_s.score))
async def change_score1(msg: Message):
    if msg.text:
        conn = await cr()
        await conn.execute(f"UPDATE bot SET score = '{msg.text}'")
        await msg.answer('–ê–¥—Ä–µ—Å –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!')
    else:
        await msg.answer('–û—à–∏–±–∫–∞! –ù—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å, –∞ –Ω–µ —Ñ–æ—Ç–æ –∏ —Ç–¥.')
    await menu(msg)



async def main():
    task = asyncio.create_task(NACH())
    while True:
        try:
            await dp.start_polling(bot)
        except Exception as e:
            print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
            await asyncio.sleep(3)
            continue

if __name__ == '__main__':
    asyncio.run(main())